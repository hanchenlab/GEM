beta_int <- as.numeric(crossprod(covmod0, crossprod(GS, nullmod$res)))
stat_int <- crossprod(beta_int[2:(1+q)], solve(covmod[2:(1+q), 2:(1+q)], beta_int[2:(1+q)]))
pval_int <- pchisq(stat_int, q, lower = F)
pval_joint <- pchisq(crossprod(beta_int[1:(1+q)], solve(covmod[1:(1+q), 1:(1+q)], beta_int[1:(1+q)])), 1+q, lower = F)
return(c(pval_main, pval_int, pval_joint, betaG, beta_int[-1], varmod, c(covmod[-1,-1]), beta_int[1], c(covmod[1,])))
}
n  <- 1000
pheno <- data.frame(id= 1:1000, cont_pheno = rnorm(1000))
x <- sample(1:3, n, replace=T)
X <- cbind(1*(x==2), 1*(x==3), rnorm(n), rnorm(n), rnorm(n), rnorm(n), rnorm(n), rnorm(n), rnorm(n), rnorm(n))
y <- 0.1*x-0.2*X[,3]+0.3*X[,3]^2+rnorm(n, sd=2)
pheno$bin_pheno <- 1*(y>mean(y))
colnames(X) <- paste0("cov", 1:10)
pheno <- cbind(pheno, X)
fwrite(pheno, file = "test.pheno", row.names = F, quote = F, sep = ",")
infile <- "../../sim_N1k_M1k.bgen"
bgen <- open_bgen(infile)
invisible(G <- do.call(cbind, lapply(1:1000, FUN = function(x) {query_bgen()$Dosages})))
invisible(close_bgen())
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, as.matrix(pheno[,c("cov1", "cov2", "cov3")]))
out <- apply(G, 2, function(x) proj_GE_lin1(nullmod, x, 1, 2, robust=T))
newTime <- system.time(invisible(system('bash -c "./GEM -bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 --covar-names 3 --robust 1 --threads 1 --out new.out"')))
newTime <- system.time(invisible(system('bash -c "./GEM -bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 --covar-names cov3 --robust 1 --threads 1 --out new.out"')))
new <- fread("new.out")
plot(-log10(new$P_Value_Marginal), -log10(out[1,]), main = "New Marginal - Marginal P-value")
abline(0,1)
plot(-log10(new$P_Value_Marginal), -log10(out[1,]), main = "New Marginal - Marginal P-value")
abline(0,1)
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "New Interaction - Interaction P-value")
abline(0,1)
plot(-log10(new$P_Value_Joint), -log10(out[3,]), main = "New Joint - Joint P-value")
abline(0,1)
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, as.matrix(pheno[,c("cov1", "cov2", "cov3", "cov4")]))
out <- apply(G, 2, function(x) proj_GE_lin1(nullmod, x, 1, 2, robust=T))
newTime <- system.time(invisible(system('bash -c "./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 --covar-names cov3 cov4 --robust 1 --threads 1 --out new.out"')))
oldTime <- system.time(invisible(system('bash -c "../../../GEM/src/./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 --covar-names cov3 cov4 --robust 1 --threads 1 --out old.out"')))
kable(data.frame(new = newTime[1:3],
old = oldTime[1:3]), booktabs = T) %>%
kable_styling(position = "center", full_width = F)
new <- fread("new.out")
old <- fread("old.out")
par(mfrow = c(3,2))
{
plot(-log10(new$P_Value_Marginal), -log10(out[1,]), main = "New Marginal - Marginal P-value")
abline(0,1)
}
{
plot(-log10(old$P_Value_Marginal), -log10(out[1,]), main = "Old Marginal - Marginal P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "New Interaction - Interaction P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "Old Interaction - Interaction P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Joint), -log10(out[3,]), main = "New Joint - Joint P-value")
abline(0,1)
}
{
plot(-log10(old$P_Value_Joint), -log10(out[3,]), main = "Old Joint - Joint P-value")
abline(0,1)
}
par(mfrow = c(1,1))
plot(-log10(new$P_Value_Joint), -log10(out[3,]), main = "New Joint - Joint P-value")
abline(0,1)
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, as.matrix(pheno[,c("cov1", "cov2", "cov3", "cov4", "cov5")]))
out <- apply(G, 2, function(x) proj_GE_lin1(nullmod, x, 1, 2, robust=T))
newTime <- system.time(invisible(system('bash -c "./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 --covar-names cov3 cov4 cov5 --robust 1 --threads 1 --out new.out"')))
oldTime <- system.time(invisible(system('bash -c "../../../GEM/src/./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 --covar-names cov3 cov4 cov5 --robust 1 --threads 1 --out old.out"')))
kable(data.frame(new = newTime[1:3],
old = oldTime[1:3]), booktabs = T) %>%
kable_styling(position = "center", full_width = F)
new <- fread("new.out")
old <- fread("old.out")
par(mfrow = c(3,2))
{
plot(-log10(new$P_Value_Marginal), -log10(out[1,]), main = "New Marginal - Marginal P-value")
abline(0,1)
}
{
plot(-log10(old$P_Value_Marginal), -log10(out[1,]), main = "Old Marginal - Marginal P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "New Interaction - Interaction P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "Old Interaction - Interaction P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Joint), -log10(out[3,]), main = "New Joint - Joint P-value")
abline(0,1)
}
{
plot(-log10(old$P_Value_Joint), -log10(out[3,]), main = "Old Joint - Joint P-value")
abline(0,1)
}
par(mfrow = c(1,1))
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, as.matrix(pheno[,c("cov1", "cov2", "cov3", "cov4", "cov5", "cov6")]))
out <- apply(G, 2, function(x) proj_GE_lin1(nullmod, x, 1, 2:3, robust=T))
newTime <- system.time(invisible(system('bash -c "./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 cov3 --covar-names cov4 cov5 cov6 --robust 1 --threads 1 --out new.out"')))
oldTime <- system.time(invisible(system('bash -c "../../../GEM/src/./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 cov3 --covar-names cov4 cov5 cov6 --robust 1 --threads 1 --out old.out"')))
kable(data.frame(new = newTime[1:3],
old = oldTime[1:3]), booktabs = T) %>%
kable_styling(position = "center", full_width = F)
new <- fread("new.out")
old <- fread("old.out")
par(mfrow = c(3,2))
{
plot(-log10(new$P_Value_Marginal), -log10(out[1,]), main = "New Marginal - Marginal P-value")
abline(0,1)
}
{
plot(-log10(old$P_Value_Marginal), -log10(out[1,]), main = "Old Marginal - Marginal P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "New Interaction - Interaction P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "Old Interaction - Interaction P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Joint), -log10(out[3,]), main = "New Joint - Joint P-value")
abline(0,1)
}
{
plot(-log10(old$P_Value_Joint), -log10(out[3,]), main = "Old Joint - Joint P-value")
abline(0,1)
}
par(mfrow = c(1,1))
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, as.matrix(pheno[,c("cov1", "cov2", "cov3", "cov4", "cov5", "cov6")]))
out <- apply(G, 2, function(x) proj_GE_lin1(nullmod, x, 1, 2:4, robust=T))
newTime <- system.time(invisible(system('bash -c "./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 cov3 cov4 --covar-names cov5 cov6 cov7 --robust 1 --threads 1 --out new.out"')))
oldTime <- system.time(invisible(system('bash -c "../../../GEM/src/./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 cov3 cov4 --covar-names cov5 cov6 cov7 --robust 1 --threads 1 --out old.out"')))
kable(data.frame(new = newTime[1:3],
old = oldTime[1:3]), booktabs = T) %>%
kable_styling(position = "center", full_width = F)
new <- fread("new.out")
old <- fread("old.out")
par(mfrow = c(3,2))
{
plot(-log10(new$P_Value_Marginal), -log10(out[1,]), main = "New Marginal - Marginal P-value")
abline(0,1)
}
{
plot(-log10(old$P_Value_Marginal), -log10(out[1,]), main = "Old Marginal - Marginal P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "New Interaction - Interaction P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "Old Interaction - Interaction P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Joint), -log10(out[3,]), main = "New Joint - Joint P-value")
abline(0,1)
}
{
plot(-log10(old$P_Value_Joint), -log10(out[3,]), main = "Old Joint - Joint P-value")
abline(0,1)
}
par(mfrow = c(1,1))
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, as.matrix(pheno[,c("cov1", "cov2", "cov3", "cov4", "cov5", "cov6", "cov7")]))
out <- apply(G, 2, function(x) proj_GE_lin1(nullmod, x, 1, 2:4, robust=T))
newTime <- system.time(invisible(system('bash -c "./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 cov3 cov4 --covar-names cov5 cov6 cov7 --robust 1 --threads 1 --out new.out"')))
oldTime <- system.time(invisible(system('bash -c "../../../GEM/src/./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 cov3 cov4 --covar-names cov5 cov6 cov7 --robust 1 --threads 1 --out old.out"')))
kable(data.frame(new = newTime[1:3],
old = oldTime[1:3]), booktabs = T) %>%
kable_styling(position = "center", full_width = F)
new <- fread("new.out")
old <- fread("old.out")
par(mfrow = c(3,2))
{
plot(-log10(new$P_Value_Marginal), -log10(out[1,]), main = "New Marginal - Marginal P-value")
abline(0,1)
}
{
plot(-log10(old$P_Value_Marginal), -log10(out[1,]), main = "Old Marginal - Marginal P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "New Interaction - Interaction P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "Old Interaction - Interaction P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Joint), -log10(out[3,]), main = "New Joint - Joint P-value")
abline(0,1)
}
{
plot(-log10(old$P_Value_Joint), -log10(out[3,]), main = "Old Joint - Joint P-value")
abline(0,1)
}
par(mfrow = c(1,1))
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, as.matrix(pheno[,c("cov1", "cov2", "cov3", "cov4", "cov5", "cov6", "cov7", "cov8")]))
out <- apply(G, 2, function(x) proj_GE_lin1(nullmod, x, 1, 2:4, robust=T))
newTime <- system.time(invisible(system('bash -c "./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 cov2 --int-covar-names cov3 cov4 cov5 --covar-names cov6 cov7 cov8 --robust 1 --threads 1 --out new.out"')))
oldTime <- system.time(invisible(system('bash -c "../../../GEM/src/./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 cov2 --int-covar-names cov3 cov4 cov5 --covar-names cov6 cov7 cov8 --robust 1 --threads 1 --out old.out"')))
kable(data.frame(new = newTime[1:3],
old = oldTime[1:3]), booktabs = T) %>%
kable_styling(position = "center", full_width = F)
new <- fread("new.out")
old <- fread("old.out")
par(mfrow = c(3,2))
{
plot(-log10(new$P_Value_Marginal), -log10(out[1,]), main = "New Marginal - Marginal P-value")
abline(0,1)
}
{
plot(-log10(old$P_Value_Marginal), -log10(out[1,]), main = "Old Marginal - Marginal P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "New Interaction - Interaction P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Interaction), -log10(out[2,]), main = "Old Interaction - Interaction P-value")
abline(0,1)
}
{
plot(-log10(new$P_Value_Joint), -log10(out[3,]), main = "New Joint - Joint P-value")
abline(0,1)
}
{
plot(-log10(old$P_Value_Joint), -log10(out[3,]), main = "Old Joint - Joint P-value")
abline(0,1)
}
par(mfrow = c(1,1))
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, as.matrix(pheno[,c("cov1", "cov2", "cov3", "cov4", "cov5", "cov6", "cov7")]))
out <- apply(G, 2, function(x) proj_GE_lin1(nullmod, x, 1, 2:4, robust=T))
newTime <- system.time(invisible(system('bash -c "./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 cov3 cov4 --covar-names cov5 cov6 cov7 --robust 1 --threads 1 --out new.out"')))
oldTime <- system.time(invisible(system('bash -c "../../../GEM/src/./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --int-covar-names cov2 cov3 cov4 --covar-names cov5 cov6 cov7 --robust 1 --threads 1 --out old.out"')))
kable(data.frame(new = newTime[1:3],
old = oldTime[1:3]), booktabs = T) %>%
kable_styling(position = "center", full_width = F)
new <- fread("new.out")
1e-5
print(1e-5, digits = 10)
sprintf("%.10f",1e-5)
library(knitr)
library(kableExtra)
library(data.table)
options(scipen = 100)
options(stringsAsFactors = F)
setwd("C:/Users/duytp/Desktop/t1e_pilot/")
bin_nonrobust <- fread("all_chr17_bin_nonrobust", header = F)
head(bin_nonrobust)
bin_nonrobust[305906:305910,]
contSq_nonrobust_nonld <- fread("contSq_nonrobust_nonld_subset", header = F)
bin_nonrobust$V13 <- as.numeric(bin_nonrobust$V13)
sum(is.na(bin_nonrobust$V13))
11178828-157448-159455
10861925
2e9/(11178828-157448-159455)
1e5/(11178828-157448-159455)
100/1e5
(100/1e5)/10861925
100/1e-5
100/1e-5/10861925
(100/1e-5)/10861925
2e9/10861925
pheno <- read.delim("../Desktop/test.pheno")
head(scale(pheno[,4:5], scale = F))
pheno <- read.delim("../Desktop/test.pheno", sep = ',')
head(scale(pheno[,4:5], scale = F))
View(pheno)
tail(scale(pheno[,4:5], scale = F))
tail(scale(pheno[,4:5], scale = F), 10)
1960.92 / 60
(1960.92 / 60) * 185
((1960.92 / 60) * 185) / 60
((1960.92 / 60) * 185) / 60 / 5
((1960.92 / 60) * 185) / 60
100 / 24
4 * 6
24 * 4 * 0.26
1986.13 / 60
1.6 * 100
52*2.5
0.52*2.5
0.52*3.5
0.52*3.5*24
1744.01 / 60
(1744.01 / 60) * 185
5377/60
90/24
2000 / 60
(2000 / 60) * 185
((2000 / 60) * 185) / 60
((2000 / 60) * 185) / 60 / 24
102 * 0.16
16 * 100
1581.72 * 12
(1581.72 * 12) / 60
(1581.72 * 12) / 60 / 60
(1581.72/60 * 185) / 60 / 24
4 * 0.16
24 * 4 * 0.16
set.seed(1)
options(stringsAsFactors = F)
library(bgenR)
library(sandwich)
library(data.table)
library(knitr)
library(kableExtra)
library(ggplot2)
library(cowplot)
proj_GE_log_prepare <- function(y, X) {
nullmod <- glm(y ~ X, family = "binomial")
mu <- nullmod$fitted.values
res <- y - mu
w <- mu * (1-mu)
X <- cbind(1, X)
return(list(res=res, w=w, XW=X*w, XWX_i=solve(crossprod(X*w, X)), X=X))
}
proj_GE_log <- function(nullmod, G, E, robust=TRUE) {
GS <- nullmod$X[, 1+c(0, E)] * G
q <- length(E)
GS <- GS - nullmod$X %*% crossprod(nullmod$XWX_i, crossprod(nullmod$XW, GS))
varmod0 <- 1/sum(nullmod$w*GS[,1]^2)
varmod <- if(robust) varmod0^2*sum(nullmod$res^2*GS[,1]^2) else varmod0
betaG <- varmod0*crossprod(GS[,1], nullmod$res)
#GS <- GS[,-1] - varmod0 * GS[,1] %*% crossprod(GS[,1]*nullmod$w, GS[,-1])
covmod0 <- solve(crossprod(GS*nullmod$w, GS))
covmod <- if(robust) crossprod(covmod0, crossprod(crossprod(GS*nullmod$res^2, GS), covmod0)) else covmod0
pval_main <- pchisq(betaG^2/varmod, 1, lower = F)
beta_int <- as.numeric(crossprod(covmod0, crossprod(GS, nullmod$res)))
stat_int <- crossprod(beta_int[-1], solve(covmod[-1,-1], beta_int[-1]))
pval_int <- pchisq(stat_int, q, lower = F)
pval_joint <- pchisq(crossprod(beta_int, solve(covmod, beta_int)), 1+q, lower = F)
return(c(pval_main, pval_int, pval_joint, betaG, beta_int[-1], varmod, c(covmod[-1,-1]), beta_int[1], c(covmod[1,])))
}
proj_GE_lin_prepare <- function(y, X) {
nullmod <- lm(y ~ X)
res <- nullmod$residuals
X <- cbind(1, X)
return(list(res=res, sigma2=summary(nullmod)$sigma^2, XX_i=solve(crossprod(X)), X=X))
}
proj_GE_lin <- function(nullmod, G, E, robust=TRUE) {
GS <- nullmod$X[, 1+c(0, E)] * G
q <- length(E)
GS <- GS - nullmod$X %*% crossprod(nullmod$XX_i, crossprod(nullmod$X, GS))
varmod0 <- 1/sum(GS[,1]^2)
varmod <- if(robust) varmod0^2*sum(nullmod$res^2*GS[,1]^2) else varmod0*nullmod$sigma2
betaG <- varmod0*crossprod(GS[,1], nullmod$res)
#GS <- GS[,-1] - varmod0 * GS[,1] %*% crossprod(GS[,1], GS[,-1])
covmod0 <- solve(crossprod(GS))
covmod <- if(robust) crossprod(covmod0, crossprod(crossprod(GS*nullmod$res^2, GS), covmod0)) else covmod0*nullmod$sigma2
pval_main <- pchisq(betaG^2/varmod, 1, lower = F)
beta_int <- as.numeric(crossprod(covmod0, crossprod(GS, nullmod$res)))
stat_int <- crossprod(beta_int[-1], solve(covmod[-1,-1], beta_int[-1]))
pval_int <- pchisq(stat_int, q, lower = F)
pval_joint <- pchisq(crossprod(beta_int, solve(covmod, beta_int)), 1+q, lower = F)
return(c(pval_main, pval_int, pval_joint, betaG, beta_int[-1], varmod, c(covmod[-1,-1]), beta_int[1], c(covmod[1,])))
}
proj_GE_lin1 <- function(nullmod, G, E, IC, robust=FALSE) {
GS <- nullmod$X[, 1+c(0, E, IC)] * G
q <- length(E)
GS <- GS - nullmod$X %*% crossprod(nullmod$XX_i, crossprod(nullmod$X, GS))
varmod0 <- 1/sum(GS[,1]^2)
varmod <- if(robust) varmod0^2*sum(nullmod$res^2*GS[,1]^2) else varmod0*nullmod$sigma2
betaG <- varmod0*crossprod(GS[,1], nullmod$res)
#GS <- GS[,-1] - varmod0 * GS[,1] %*% crossprod(GS[,1], GS[,-1])
covmod0 <- solve(crossprod(GS))
covmod <- if(robust) crossprod(covmod0, crossprod(crossprod(GS*nullmod$res^2, GS), covmod0)) else covmod0*nullmod$sigma2
pval_main <- pchisq(betaG^2/varmod, 1, lower = F)
beta_int <- as.numeric(crossprod(covmod0, crossprod(GS, nullmod$res)))
stat_int <- crossprod(beta_int[2:(1+q)], solve(covmod[2:(1+q), 2:(1+q)], beta_int[2:(1+q)]))
pval_int <- pchisq(stat_int, q, lower = F)
pval_joint <- pchisq(crossprod(beta_int[1:(1+q)], solve(covmod[1:(1+q), 1:(1+q)], beta_int[1:(1+q)])), 1+q, lower = F)
return(c(pval_main, pval_int, pval_joint, betaG, beta_int[-1], varmod, c(covmod[-1,-1]), beta_int[1], c(covmod[1,])))
}
proj_GE_log1 <- function(nullmod, G, E, IC, robust=TRUE) {
GS <- nullmod$X[, 1+c(0, E, IC)] * G
q <- length(E)
GS <- GS - nullmod$X %*% crossprod(nullmod$XWX_i, crossprod(nullmod$XW, GS))
varmod0 <- 1/sum(nullmod$w*GS[,1]^2)
varmod <- if(robust) varmod0^2*sum(nullmod$res^2*GS[,1]^2) else varmod0
betaG <- varmod0*crossprod(GS[,1], nullmod$res)
#GS <- GS[,-1] - varmod0 * GS[,1] %*% crossprod(GS[,1]*nullmod$w, GS[,-1])
covmod0 <- solve(crossprod(GS*nullmod$w, GS))
covmod <- if(robust) crossprod(covmod0, crossprod(crossprod(GS*nullmod$res^2, GS), covmod0)) else covmod0
pval_main <- pchisq(betaG^2/varmod, 1, lower = F)
beta_int <- as.numeric(crossprod(covmod0, crossprod(GS, nullmod$res)))
stat_int <- crossprod(beta_int[2:(1+q)], solve(covmod[2:(1+q), 2:(1+q)], beta_int[2:(1+q)]))
pval_int <- pchisq(stat_int, q, lower = F)
pval_joint <- pchisq(crossprod(beta_int[1:(1+q)], solve(covmod[1:(1+q), 1:(1+q)], beta_int[1:(1+q)])), 1+q, lower = F)
return(c(pval_main, pval_int, pval_joint, betaG, beta_int[-1], varmod, c(covmod[-1,-1]), beta_int[1], c(covmod[1,])))
}
n  <- 1000
pheno <- data.frame(id= 1:1000, cont_pheno = rnorm(1000))
x <- sample(1:3, n, replace=T)
X <- cbind(1*(x==2), 1*(x==3), rnorm(n), rnorm(n), rnorm(n), rnorm(n), rnorm(n), rnorm(n), rnorm(n), rnorm(n))
y <- 0.1*x-0.2*X[,3]+0.3*X[,3]^2+rnorm(n, sd=2)
pheno$bin_pheno <- 1*(y>mean(y))
colnames(X) <- paste0("cov", 1:10)
pheno <- cbind(pheno, X)
fwrite(pheno, file = "test.pheno", row.names = F, quote = F, sep = ",")
infile <- "../../sim_N1k_M1k.bgen"
bgen <- open_bgen(infile)
setwd("../Desktop/GEM/src/")
n  <- 1000
pheno <- data.frame(id= 1:1000, cont_pheno = rnorm(1000))
x <- sample(1:3, n, replace=T)
X <- cbind(1*(x==2), 1*(x==3), rnorm(n), rnorm(n), rnorm(n), rnorm(n), rnorm(n), rnorm(n), rnorm(n), rnorm(n))
y <- 0.1*x-0.2*X[,3]+0.3*X[,3]^2+rnorm(n, sd=2)
pheno$bin_pheno <- 1*(y>mean(y))
colnames(X) <- paste0("cov", 1:10)
pheno <- cbind(pheno, X)
fwrite(pheno, file = "test.pheno", row.names = F, quote = F, sep = ",")
infile <- "../../sim_N1k_M1k.bgen"
bgen <- open_bgen(infile)
bgen <- open_bgen("../Desktop/sim_N1k_M1k.bgen")
invisible(G <- do.call(cbind, lapply(1:1000, FUN = function(x) {query_bgen()$Dosages})))
invisible(close_bgen())
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, scale(as.matrix(pheno[,"cov1"]), scale = F))
out <- apply(G, 2, function(x) proj_GE_lin(nullmod, x, 1, robust=F))
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, scale(as.matrix(pheno[,"cov1"]), scale = F))
out <- apply(G, 2, function(x) proj_GE_lin(nullmod, x, 1, robust=F))
newTime <- system.time(invisible(system('bash -c "../Desktop/GEM/src./GEM --bgen ../Desktop/sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --robust 0 --threads 1 --out new.out"')))
# oldTime <- system.time(invisible(system('bash -c "../../../GEM/src/./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --robust 0 --threads 1 --out old.out"')))
kable(data.frame(new = newTime[1:3],
old = oldTime[1:3]), booktabs = T) %>%
kable_styling(position = "center", full_width = F)
kable(data.frame(new = newTime[1:3]), booktabs = T) %>%
kable_styling(position = "center", full_width = F)
new <- fread("new.out")
old <- fread("old.out")
plot(-log10(new$P_Value_Marginal), -log10(out[1,]), main = "New Marginal - Marginal P-value")
View(new)
newTime <- system.time(invisible(system('bash -c "../Desktop/GEM/src./GEM --bgen ../Desktop/sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --robust 0 --threads 1 --out new.out"')))
new <- fread("new.out")
View(new)
head(out)
View(out)
newTime <- system.time(invisible(system('bash -c "../Desktop/GEM/src/./GEM --bgen ../Desktop/sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --robust 0 --threads 1 --out new.out"')))
new <- fread("new.out")
dir()
new <- fread("../../new.out")
dir("../../../")
dir("../../../Documents/")
newTime <- system.time(invisible(system('bash -c "../Desktop/GEM/src/./GEM --bgen ../Desktop/sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --robust 0 --threads 1 --out ../Desktop/new.out"')))
new <- fread("../Desktop/new.out")
View(out)
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, scale(scale(as.matrix(pheno[,"cov1"]), scale = F)),scale = F)
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, scale(scale(as.matrix(pheno[,"cov1"]), scale = F), scale = F))
out2 <- apply(G, 2, function(x) proj_GE_lin(nullmod, x, 1, robust=F))
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, scale(scale(as.matrix(pheno[,"cov1"]), scale = F), scale = F))
out2 <- apply(G, 2, function(x) proj_GE_lin(nullmod, x, 1, robust=F))
newTime <- system.time(invisible(system('bash -c "../Desktop/GEM/src/./GEM --bgen ../Desktop/sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --robust 0 --threads 1 --out ../Desktop/new.out"')))
# oldTime <- system.time(invisible(system('bash -c "../../../GEM/src/./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --robust 0 --threads 1 --out old.out"')))
kable(data.frame(new = newTime[1:3]), booktabs = T) %>%
kable_styling(position = "center", full_width = F)
new <- fread("../Desktop/new.out")
nullmod <- proj_GE_lin_prepare(pheno$cont_pheno, scale(as.matrix(pheno[,"cov1"]), scale = F))
out <- apply(G, 2, function(x) proj_GE_lin(nullmod, x, 1, robust=F))
newTime <- system.time(invisible(system('bash -c "../Desktop/GEM/src/./GEM --bgen ../Desktop/sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --robust 0 --threads 1 --out ../Desktop/new.out"')))
# oldTime <- system.time(invisible(system('bash -c "../../../GEM/src/./GEM --bgen ../../sim_N1k_M1k.bgen --pheno-file test.pheno --sampleid-name id --pheno-name cont_pheno --pheno-type 0 --exposure-names cov1 --robust 0 --threads 1 --out old.out"')))
kable(data.frame(new = newTime[1:3]), booktabs = T) %>%
kable_styling(position = "center", full_width = F)
new <- fread("../Desktop/new.out")
96 / 4
50 * 1.1
50 * 1.1 + 50 * 1.6
1.3 * 25 + 1.4 * 25 + 1.8 * 25
1.3 * 25 + 1.4 * 25 + 1.7 * 25
1.3 * 25 + 1.4 * 25 + 1.7 * 50
(1152.1 / 60) * 185
((1152.1 / 60) * 185) / 60
((1152.1 / 60) * 185) / 60 / 24
((1400.1 / 60) * 185) / 60 / 24
3 * 0.16 * 24
0.26 * 24
0.26 * 24 * 3
18 * 76
18 * 80
1550 / 60
paste0("pheno", 1:185)
write.table(paste0("pheno", 1:185), quote = F, sep = " ", row.names = F, col.names = F)
write.table(paste0("pheno", 1:185), "temp.out", quote = F, sep = " ", row.names = F, col.names = F)
paste0("pheno", 1:185)
paste0("pheno", 1:185, collapse = ' ')
write.table(paste0("pheno", 1:185, collapse = ' '), "temp.out", quote = F, sep = " ", row.names = F, col.names = F)
o <- read.delim("../../../Downloads/0_gem_res")
k <- fread("../../../Downloads/1_gem_res")
a <- rbind(o,k)
rm(k,o)
sum(a$P_Value_Interaction < 0.05)
64264 / (nrow(a))
sum(a$P_Value_Interaction < 0.00001)
4 / (nrow(a))
sum(a$P_Value_Joint < 0.00001)
8 / (nrow(a))
sum(a$P_Value_Interaction < 0.05)
sum(a$P_Value_Joint < 0.05)
66776 / nrow(a)
